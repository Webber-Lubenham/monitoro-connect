
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://pqhxgsrbazjgzyrxhyjj.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBxaHhnc3JiYXpqZ3p5cnhoeWpqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMyNjg4MzEsImV4cCI6MjA1ODg0NDgzMX0.EV6PyUfJRM3p8CFbWfXw0HCnY124PI-T6tQVDIe0DW0";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

/**
 * Gets authentication headers for Supabase Edge Functions
 * This ensures proper authorization for requests to edge functions
 */
export const getAuthHeaders = async (): Promise<Record<string, string>> => {
  const { data: { session } } = await supabase.auth.getSession();
  
  const headers: Record<string, string> = {
    'Content-Type': 'application/json',
    'x-client-info': 'monitore-app'
  };

  // Add authorization header if user is logged in
  if (session?.access_token) {
    headers['Authorization'] = `Bearer ${session.access_token}`;
  }

  return headers;
};
