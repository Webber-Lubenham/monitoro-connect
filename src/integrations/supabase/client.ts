// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './database.types';

// Use environment variables
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL;
const SUPABASE_ANON_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY;

if (!SUPABASE_URL || !SUPABASE_ANON_KEY) {
  throw new Error('Missing Supabase environment variables');
}

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_ANON_KEY);

interface Headers {
  'Content-Type': string;
  'X-Client-Info': string;
  'Authorization'?: string;
}

// Helper function for auth headers
export const getAuthHeaders = async () => {
  try {
    const { data } = await supabase.auth.getSession();
    const session = data?.session;
    
    const headers = {
      'Content-Type': 'application/json',
      'X-Client-Info': 'monitore-app/1.0.0'
    };
    
    if (session?.access_token) {
      headers['Authorization'] = `Bearer ${session.access_token}`;
    }
    
    return headers;
  } catch (error) {
    console.error('Error getting auth headers:', error);
    return {
      'Content-Type': 'application/json',
      'X-Client-Info': 'monitore-app/1.0.0'
    };
  }
};
